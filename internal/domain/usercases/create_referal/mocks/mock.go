// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWriteRepo is a mock of WriteRepo interface.
type MockWriteRepo struct {
	ctrl     *gomock.Controller
	recorder *MockWriteRepoMockRecorder
}

// MockWriteRepoMockRecorder is the mock recorder for MockWriteRepo.
type MockWriteRepoMockRecorder struct {
	mock *MockWriteRepo
}

// NewMockWriteRepo creates a new mock instance.
func NewMockWriteRepo(ctrl *gomock.Controller) *MockWriteRepo {
	mock := &MockWriteRepo{ctrl: ctrl}
	mock.recorder = &MockWriteRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWriteRepo) EXPECT() *MockWriteRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockWriteRepo) Create(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockWriteRepoMockRecorder) Create(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockWriteRepo)(nil).Create), ctx)
}
